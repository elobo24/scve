<?php

namespace App\Http\Controllers\Backend\ControlVisitas\Ingresos;

use Illuminate\Http\Request;

use App\Http\Requests;
use App\Http\Controllers\Controller;
use App\Models\Configuracion\Empresas;
use App\Models\Configuracion\Bienes;
use App\Models\Control_Visitas\Visitas;
use App\Models\Control_Visitas\Equipajes;
use App\Http\Requests\Backend\Control_Visitas\Equipos\EquipajesCreateRequest;
use Validator;
use Session;
use DB;
use Illuminate\Database\Connection;
use Yajra\Datatables\Facades\Datatables;
use Jenssegers\Date\Date;

class EquiposController extends Controller
{
  public function __construct()
  {
    Date::setLocale('es');
  }

  public function getIndex()
  {
    $empresas = Empresas::select('id','nombre')
    ->orderBy('nombre', 'asc')
    ->lists('nombre','id')
    ->prepend('-- SELECCIONE --', '');

    $visitantes = Visitas::select('t_visitas.id', DB::raw("CONCAT(t_visitantes.cedula,' - ',t_visitantes.nombre,' ',t_visitantes.apellido) AS nombre_completo"))
    ->join('t_visitantes','t_visitas.visitante_id','=','t_visitantes.id')
    ->where(DB::raw('current_date'),'=',DB::raw('t_visitas.entrada::date'))
    ->whereNull('t_visitas.salida')
    ->orderBy('t_visitas.id', 'DESC')
    ->lists('nombre_completo','t_visitas.id')
    ->prepend('-- SELECCIONE --', '');

    $contacto = [
        '' => '-- SELECCIONE --',
    ];

    $equipo = Bienes::select('id','nombre')
    ->where('estatus','ACTIVO')
    ->orderBy('nombre', 'asc')
    ->lists('nombre','id')
    ->prepend('-- SELECCIONE --', '');

    return View('backend.control_visitas.ingresos.equipos.create')
    ->with('empresas', $empresas)
    ->with('visitantes', $visitantes)
    ->with('contacto', $contacto)
    ->with('equipo', $equipo);
  }
  public function store(EquipajesCreateRequest $request)
  {
    $serial = $request->serial;

    $equipos = Equipajes::select('t_equipajes.serial')
    ->where('t_equipajes.serial','=',$serial)
    ->whereNull('t_equipajes.hora_salida')
    ->where(DB::raw('current_date'),'=',DB::raw('t_equipajes.hora_entrada::date'))
    ->first();

    if ($equipos != NULL)
    {
        $equipo = $equipos->serial;
    }
    else
    {
      $equipo = null;
    }

    $rules = [];
    $messages = [];

    $validator = Validator::make($request->all(), $rules, $messages);
    if ($serial == $equipo )
    {
      $validator->getMessageBag()->add('asd', 'No debe registrar el equipo hasta no haya sido egresado.');
      return back()
      ->withInput()
      ->withErrors($validator);
    }
    else
    {
      $equipajes = new Equipajes();
      $equipajes->visita_id = $request->visitantes;
      $equipajes->bien_id = $request->equipo;
      $equipajes->marca = $request->marca;
      $equipajes->modelo = $request->modelo;
      $equipajes->serial = $request->serial;
      $equipajes->descripcion = $request->descripcion;
      $equipajes->entrada = '1';
      $equipajes->hora_entrada = Date::now();
      $result = $equipajes->save();
    }

    notify()->flash('Equipo Registrado', 'success', [
      'timer' => 3000,
      'text' => ''
    ]);

    return redirect()->route('EquiposIngresos');

  }
}
