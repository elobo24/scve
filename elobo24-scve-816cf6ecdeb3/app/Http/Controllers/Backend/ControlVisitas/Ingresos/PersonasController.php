<?php

namespace App\Http\Controllers\Backend\ControlVisitas\Ingresos;

use Illuminate\Http\Request;
use App\Http\Requests;
use App\Http\Controllers\Controller;
use App\Models\Configuracion\Empresas;
use App\Models\Control_Visitas\Visitantes;
use App\Models\Control_Visitas\Visitas;
use App\Http\Requests\Backend\Control_Visitas\Personas\PersonasCreateRequest;
use Validator;
use Session;
use DB;
use Illuminate\Database\Connection;
use Yajra\Datatables\Facades\Datatables;
use Jenssegers\Date\Date;
use Input;
use Response;

class PersonasController extends Controller
{
  public function __construct()
  {
    Date::setLocale('es');
  }

  public function getIndex(Request $request)
  {
    $empresas = Empresas::select('id','nombre')
    ->orderBy('nombre', 'asc')
    ->lists('nombre','id')
    ->prepend('-- SELECCIONE --', '');

    $sexo = [
      '' => '-- SELECCIONE --',
      'M' => 'MASCULINO',
      'F' => 'FEMENINO',
    ];

    $contacto = [
      '' => '-- SELECCIONE --',
    ];

    if($request->get('cedula') != '')
    {
      $cedulaselec = $request->get('cedula');
      $visitantes = Visitantes::select('t_visitantes.id','t_visitantes.cedula','t_visitantes.nombre','t_visitantes.apellido')
      ->where('cedula', $cedulaselec)
      ->distinct()
      ->first();
    }
    else
    {
      $visitantes = '';
    }

    return View('backend.control_visitas.ingresos.personas.create')
    ->with('empresas', $empresas)
    ->with('sexo', $sexo)
    ->with('contacto', $contacto)
    ->with('visitantes', $visitantes);
  }

  public function autocompleteVisitante()
  {
    $queries = Visitantes::where(function($query)
    {
      $term = Input::get('term');
      $query->where('cedula', '=', $term);
    })->take(6)->get();
    foreach ($queries as $query)
    {
      $results[] = [ 'id' => $query->id, 'value' => $query->cedula];
    }
    return Response::json($results);
  }

  public function store(PersonasCreateRequest $request)
  {

    DB::beginTransaction();

    try {

      $cedula = $request->cedula;

      $visitante = Visitantes::select('t_visitantes.cedula')
      ->join('t_visitas','t_visitas.visitante_id','=','t_visitantes.id')
      ->where('t_visitantes.cedula','=',$cedula)
      ->whereNull('t_visitas.salida')
      ->where(DB::raw('current_date'),'=',DB::raw('t_visitas.entrada::date'))
      ->first();

      if ($visitante != NULL)
      {
          $vis_ced = $visitante->cedula;
      }
      else
      {
        $vis_ced = null;
      }

      $rules = [];
      $messages = [];

      $validator = Validator::make($request->all(), $rules, $messages);
      if ($cedula == $vis_ced )
      {
        $validator->getMessageBag()->add('asd', 'No debe registrar el número de cédula si no ha sido egresado.');
        return back()
        ->withInput()
        ->withErrors($validator);
      }
      else
      {
      $visitantes = Visitantes::select('t_visitantes.id')
      ->where('cedula', $cedula)
      ->distinct()
      ->first();

      // ****** FOTO ************* //
      if (preg_match('/data:image\/(gif|jpeg|png);base64,(.*)/i',  $request->foto, $matches)) {
        $imageType = $matches[1];
        $imageData = base64_decode($matches[2]);
        $image = imagecreatefromstring($imageData);
        $filename = md5($imageData).'.png';
        header('Content-Type: image/png');
        imagepng($image, public_path().'/img/' . $filename);
        imagedestroy($image);
      }
      // *************************** //
      if($visitantes == null)
      {
        $visitantes = new Visitantes;
        $visitantes->cedula = $request->cedula;
        $visitantes->nombre = trim($request->nombre);
        $visitantes->apellido = trim($request->apellido);
        $visitantes->sexo = $request->sexo;
        $visitantes->foto = $filename;
        $visitantes->save();
      }

      $visitas = new Visitas();
      $visitas->visitante_id = $visitantes->id;
      $visitas->empresa_id = $request->empresas;
      $visitas->usuario_id = access()->user()->id;
      $visitas->entrada = Date::now();
      $visitas->empresa_origen = $request->empresa_origen;
      $visitas->foto = $filename;
      $visitas->persona_contacto = $request->persona_contacto;
      $result = $visitas->save();
    }
      DB::commit();
      notify()->flash('Visitante registrado', 'success', [
        'timer' => 3000,
        'text' => ''
      ]);
      return redirect()->route('PersonasIngresos');

    } catch (QueryException $ex) {
      DB::rollback();
      throw new Exception($ex);
    } catch (PDOException $ex) {
      DB::rollback();
      throw new Exception($ex);
    } catch (FatalErrorException $ex) {
      DB::rollback();
      throw new Exception($ex);
    } catch (Exception $ex) {
      DB::rollback();
      throw new Exception($ex);
    }
  }

  public function getVisitantes($cedula)
  {
    $visitantes = Visitantes::select('t_visitantes.id','t_visitantes.cedula','t_visitantes.nombre','t_visitantes.apellido','t_visitantes.sexo')
    ->where('cedula', $cedula)
    ->distinct()
    ->first();

    return response()->json($visitantes);
  }
}
